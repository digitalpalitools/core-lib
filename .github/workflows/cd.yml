name: Continuous Deployment

on:
  push:
    branches: [ master ]

jobs:
  wasm-pack:
    name: WAsm Pack
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

      - run: wasm-pack build --scope digitalpalitools --target bundler
        working-directory: ./js_lib

  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Run cargo check - pls_core
        uses: actions-rs/cargo@v1
        continue-on-error: false
        with:
          command: check
          args: --manifest-path ./pls_core/Cargo.toml

      - name: Run cargo check - js_lib
        uses: actions-rs/cargo@v1
        continue-on-error: false
        with:
          command: check
          args: --manifest-path ./js_lib/Cargo.toml

      - name: Run cargo check - test_app
        uses: actions-rs/cargo@v1
        continue-on-error: false
        with:
          command: check
          args: --manifest-path ./test_app/Cargo.toml

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Run cargo test - pls_core
        uses: actions-rs/cargo@v1
        continue-on-error: false
        with:
          command: test
          args: --manifest-path ./pls_core/Cargo.toml

      - name: Run cargo test - js_lib
        uses: actions-rs/cargo@v1
        continue-on-error: false
        with:
          command: test
          args: --manifest-path ./js_lib/Cargo.toml

      - name: Run cargo test - test_app
        uses: actions-rs/cargo@v1
        continue-on-error: false
        with:
          command: test
          args: --manifest-path ./test_app/Cargo.toml

  lints:
    name: Lints
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Run cargo fmt - pls_core
        uses: actions-rs/cargo@v1
        continue-on-error: false
        with:
          command: fmt
          args: --manifest-path ./pls_core/Cargo.toml --all -- --check

      - name: Run cargo clippy - pls_core
        uses: actions-rs/cargo@v1
        continue-on-error: false
        with:
          command: clippy
          args: --manifest-path ./pls_core/Cargo.toml --all-targets --all-features -- -D warnings

      - name: Run cargo fmt - js_lib
        uses: actions-rs/cargo@v1
        continue-on-error: false
        with:
          command: fmt
          args: --manifest-path ./js_lib/Cargo.toml --all -- --check

      - name: Run cargo clippy - js_lib
        uses: actions-rs/cargo@v1
        continue-on-error: false
        with:
          command: clippy
          args: --manifest-path ./js_lib/Cargo.toml --all-targets --all-features -- -D warnings

      - name: Run cargo fmt - test_app
        uses: actions-rs/cargo@v1
        continue-on-error: false
        with:
          command: fmt
          args: --manifest-path ./test_app/Cargo.toml --all -- --check

      - name: Run cargo clippy - test_app
        uses: actions-rs/cargo@v1
        continue-on-error: false
        with:
          command: clippy
          args: --manifest-path ./test_app/Cargo.toml --all-targets --all-features -- -D warnings

  finish:
    name: Finish
    needs: [check, test, lints]
    runs-on: ubuntu-latest
    steps:
      - name: Notify DPT on Discord
        if: always()
        env:
          JOB_STATUS: ${{ job.status }}
          WEBHOOK_URL: ${{ secrets.DISCORD_DPT_DEPLOYMENT_NOTIFICATIONS_WEBHOOK_URL }}
          HOOK_OS_NAME: ${{ runner.os }}
          WORKFLOW_NAME: ${{ github.workflow }}
        run: |
          git clone https://github.com/DiscordHooks/github-actions-discord-webhook webhook
          bash webhook/send.sh $JOB_STATUS $WEBHOOK_URL
        shell: bash
